<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btGuardar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="helpProvider1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>49</value>
  </metadata>
</root>